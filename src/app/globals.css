@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

@layer base {
  html {
    @apply scroll-smooth;
  }
}

:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}
/* src/app/globals.css */

/* ... (các CSS hiện có của bạn) ... */

/* Custom Gradient Background for subtle effects */
.gradient-bg-1 {
  background: radial-gradient(
      circle at top left,
      var(--gradient-blue) 0%,
      transparent 40%
    ),
    radial-gradient(
      circle at bottom right,
      var(--gradient-red) 0%,
      transparent 40%
    );
  background-blend-mode: overlay; /* Hoặc screen, lighten tùy hiệu ứng mong muốn */
}

.gradient-bg-2 {
  background: radial-gradient(
      circle at top right,
      var(--gradient-yellow) 0%,
      transparent 40%
    ),
    radial-gradient(
      circle at bottom left,
      var(--gradient-blue) 0%,
      transparent 40%
    );
  background-blend-mode: overlay;
}

/* Custom Gradient Border (for a pseudo-element) */
/* This is a common trick to create a gradient border */
.gradient-border-mask {
  position: relative;
  /* background: hsl(var(--card));  */
  isolation: isolate; /* Tạo stacking context mới */
}
.gradient-border-mask::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit; /* Kế thừa border-radius từ parent */
  padding: 1px; /* Độ dày của viền gradient */
  background: linear-gradient(
    to right,
    var(--gradient-blue),
    var(--gradient-red),
    var(--gradient-yellow)
  );
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  pointer-events: none; /* Đảm bảo không chặn sự kiện click của content */
  z-index: -1; /* Đặt gradient border ở dưới content */
}

/* Define CSS Variables for your specific gradient colors */
/* Thêm vào ":root" hoặc ":root[data-theme='dark']" */
:root {
  --gradient-blue: 220 100% 60%; /* HSL for a vivid blue */
  --gradient-red: 0 100% 60%; /* HSL for a vivid red */
  --gradient-yellow: 40 100% 60%; /* HSL for a vivid yellow */
}

/* Nếu bạn muốn chỉ áp dụng trong dark mode */
.dark {
  --gradient-blue: 220 100% 60%;
  --gradient-red: 0 100% 60%;
  --gradient-yellow: 40 100% 60%;
}
.custom-scrollbar::-webkit-scrollbar {
  width: 8px; /* Chiều rộng của thanh cuộn */
}

.custom-scrollbar::-webkit-scrollbar-track {
  background: var(--background); /* Nền của track */
  border-radius: 10px;
}

.custom-scrollbar::-webkit-scrollbar-thumb {
  background-color: var(--primary); /* Màu của thanh cuộn */
  border-radius: 10px;
  border: 2px solid var(--background); /* Viền để làm nó nhỏ hơn track */
}

.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background-color: var(--primary-foreground); /* Màu khi hover */
}
/* src/app/globals.css */

/* ... Các CSS hiện có ... */

/* CSS cho hiệu ứng viền gradient phát sáng khi hover */
@layer utilities {
  .card-glow-border::before {
    content: "";
    position: absolute;
    inset: -2px; /* Độ dày của vùng glow (điều chỉnh nếu cần) */
    border-radius: calc(
      0.75rem + 2px
    ); /* Phải lớn hơn bo góc của Card (0.75rem = rounded-xl) */
    background-image: linear-gradient(
      to right,
      theme("colors.red.600"),
      theme("colors.violet.600"),
      theme("colors.yellow.500")
    );
    filter: blur(6px); /* Độ mờ của glow (điều chỉnh nếu cần) */
    opacity: 0;
    transition: opacity 1000ms; /* Transition chậm khi tắt */
    z-index: -1; /* Đặt phía sau Card */
    pointer-events: none; /* Cho phép click xuyên qua */
  }

  .group:hover .card-glow-border::before {
    opacity: 0.75; /* Độ sáng khi hover (điều chỉnh nếu cần) */
    transition-duration: 200ms; /* Transition nhanh khi bật */
  }
}
